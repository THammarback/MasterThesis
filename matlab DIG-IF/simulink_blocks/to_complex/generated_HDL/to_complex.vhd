-- -------------------------------------------------------------
-- 
-- File Name: E:\Downloads\2021b-10mayFINAL\2021b-10mayFINAL\srcFiles\to_complex\hdlsrc\to_complex_test\to_complex.vhd
-- Created: 2022-05-12 14:31:03
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1
-- Target subsystem base rate: 1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: to_complex
-- Source Path: to_complex_test/to_complex
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.to_complex_pkg.ALL;

ENTITY to_complex IS
  PORT( in_stream                         :   IN    vector_of_std_logic_vector8(0 TO 63);  -- uint8 [64]
        out_stream_re                     :   OUT   vector_of_std_logic_vector8(0 TO 31);  -- uint8 [32]
        out_stream_im                     :   OUT   vector_of_std_logic_vector8(0 TO 31)  -- uint8 [32]
        );
END to_complex;


ARCHITECTURE rtl OF to_complex IS

  -- Component Declarations
  COMPONENT combine_to_complex
    PORT( In1                             :   IN    vector_of_std_logic_vector8(0 TO 1);  -- uint8 [2]
          Out1_re                         :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
          Out1_im                         :   OUT   std_logic_vector(7 DOWNTO 0)  -- uint8
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : combine_to_complex
    USE ENTITY work.combine_to_complex(rtl);

  -- Signals
  SIGNAL combine_to_complex_out1_re       : vector_of_std_logic_vector8(0 TO 31);  -- ufix8 [32]
  SIGNAL combine_to_complex_out1_im       : vector_of_std_logic_vector8(0 TO 31);  -- ufix8 [32]

BEGIN
  GEN_LABEL: FOR k IN 0 TO 31 GENERATE
    u_combine_to_complex : combine_to_complex
      PORT MAP( In1 => in_stream(2*k TO 2*(k+1) - 1),  -- uint8 [2]
                Out1_re => combine_to_complex_out1_re(k),  -- uint8
                Out1_im => combine_to_complex_out1_im(k)  -- uint8
                );
  END GENERATE;

  out_stream_re <= combine_to_complex_out1_re;

  out_stream_im <= combine_to_complex_out1_im;

END rtl;

