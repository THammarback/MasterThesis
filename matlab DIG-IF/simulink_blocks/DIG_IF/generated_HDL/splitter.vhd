-- -------------------------------------------------------------
-- 
-- File Name: E:\Downloads\2021b-10mayFINAL\2021b-10mayFINAL\srcFiles\DIG_IF\hdlsrc\DIG_IF_test\splitter.vhd
-- Created: 2022-05-10 17:23:04
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: splitter
-- Source Path: DIG_IF_test/DIG_IF/splitter
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.DIG_IF_pac.ALL;

ENTITY splitter IS
  PORT( coeffs_re                         :   IN    vector_of_std_logic_vector8(0 TO 7);  -- uint8 [8]
        coeffs_im                         :   IN    vector_of_std_logic_vector8(0 TO 7);  -- uint8 [8]
        data_in_re                        :   IN    std_logic_vector(23 DOWNTO 0);  -- ufix24
        data_in_im                        :   IN    std_logic_vector(23 DOWNTO 0);  -- ufix24
        data_out_re                       :   OUT   vector_of_std_logic_vector32(0 TO 7);  -- uint32 [8]
        data_out_im                       :   OUT   vector_of_std_logic_vector32(0 TO 7)  -- uint32 [8]
        );
END splitter;


ARCHITECTURE rtl OF splitter IS

  -- Signals
  SIGNAL data_in_re_unsigned              : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL data_in_im_unsigned              : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL coeffs_re_unsigned               : vector_of_unsigned8(0 TO 7);  -- uint8 [8]
  SIGNAL coeffs_im_unsigned               : vector_of_unsigned8(0 TO 7);  -- uint8 [8]
  SIGNAL MatrixMultiply_Re_AC             : vector_of_unsigned32(0 TO 7);  -- ufix32 [8]
  SIGNAL mulOutput                        : vector_of_unsigned32(0 TO 7);  -- ufix32 [8]
  SIGNAL mulOutput_1                      : vector_of_unsigned33(0 TO 7);  -- ufix33 [8]
  SIGNAL mulOutput_2                      : vector_of_unsigned32(0 TO 7);  -- uint32 [8]
  SIGNAL MatrixMultiply1_mul_temp         : vector_of_unsigned32(0 TO 7);  -- ufix32 [8]
  SIGNAL MatrixMultiply_Im_AD             : vector_of_signed33(0 TO 7);  -- sfix33 [8]
  SIGNAL mulOutput_3                      : vector_of_unsigned32(0 TO 7);  -- ufix32 [8]
  SIGNAL MultiplyAdd1_add_add_cast        : vector_of_signed35(0 TO 7);  -- sfix35 [8]
  SIGNAL mulOutput_4                      : vector_of_signed35(0 TO 7);  -- sfix35 [8]
  SIGNAL mulOutput_5                      : vector_of_unsigned32(0 TO 7);  -- uint32 [8]

BEGIN
  data_in_re_unsigned <= unsigned(data_in_re);

  outputgen3: FOR kk IN 0 TO 7 GENERATE
    coeffs_re_unsigned(kk) <= unsigned(coeffs_re(kk));
  END GENERATE;


  MatrixMultiply_Re_AC_gen: FOR t_0 IN 0 TO 7 GENERATE
    MatrixMultiply_Re_AC(t_0) <= data_in_re_unsigned * coeffs_re_unsigned(t_0);
  END GENERATE MatrixMultiply_Re_AC_gen;


  data_in_im_unsigned <= unsigned(data_in_im);

  outputgen2: FOR kk IN 0 TO 7 GENERATE
    coeffs_im_unsigned(kk) <= unsigned(coeffs_im(kk));
  END GENERATE;


  mulOutput_gen: FOR t_01 IN 0 TO 7 GENERATE
    mulOutput(t_01) <= data_in_im_unsigned * coeffs_im_unsigned(t_01);
  END GENERATE mulOutput_gen;



  mulOutput_1_gen: FOR t_02 IN 0 TO 7 GENERATE
    mulOutput_1(t_02) <= resize(MatrixMultiply_Re_AC(t_02), 33) - resize(mulOutput(t_02), 33);
  END GENERATE mulOutput_1_gen;



  mulOutput_2_gen: FOR ii IN 0 TO 7 GENERATE
    mulOutput_2(ii) <= mulOutput_1(ii)(31 DOWNTO 0);
  END GENERATE mulOutput_2_gen;


  outputgen1: FOR kk IN 0 TO 7 GENERATE
    data_out_re(kk) <= std_logic_vector(mulOutput_2(kk));
  END GENERATE;


  MatrixMultiply_Im_AD_gen: FOR t_03 IN 0 TO 7 GENERATE
    MatrixMultiply1_mul_temp(t_03) <= data_in_re_unsigned * coeffs_im_unsigned(t_03);
    MatrixMultiply_Im_AD(t_03) <= signed(resize(MatrixMultiply1_mul_temp(t_03), 33));
  END GENERATE MatrixMultiply_Im_AD_gen;



  mulOutput_3_gen: FOR t_04 IN 0 TO 7 GENERATE
    mulOutput_3(t_04) <= data_in_im_unsigned * coeffs_re_unsigned(t_04);
  END GENERATE mulOutput_3_gen;



  mulOutput_4_gen: FOR t_05 IN 0 TO 7 GENERATE
    MultiplyAdd1_add_add_cast(t_05) <= signed(resize(mulOutput_3(t_05), 35));
    mulOutput_4(t_05) <= resize(MatrixMultiply_Im_AD(t_05), 35) + MultiplyAdd1_add_add_cast(t_05);
  END GENERATE mulOutput_4_gen;



  mulOutput_5_gen: FOR ii1 IN 0 TO 7 GENERATE
    mulOutput_5(ii1) <= unsigned(mulOutput_4(ii1)(31 DOWNTO 0));
  END GENERATE mulOutput_5_gen;


  outputgen: FOR kk IN 0 TO 7 GENERATE
    data_out_im(kk) <= std_logic_vector(mulOutput_5(kk));
  END GENERATE;

END rtl;

