-- -------------------------------------------------------------
-- 

-- File Name: E:\Downloads\2021b-10mayFINAL\2021b-10mayFINAL\srcFiles\coeff_bank\hdlsrc\coeff_bank_integration_test\coeff_bank.vhd
-- Created: 2022-05-13 10:10:53
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1
-- Target subsystem base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- coeff_out                     ce_out        1
-- coeff_out1                    ce_out        1
-- coeff_out2                    ce_out        1
-- coeff_out3                    ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: coeff_bank
-- Source Path: coeff_bank_integration_test/coeff_bank
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.coeff_bank_pac.ALL;

ENTITY coeff_bank IS
  PORT( clk                               :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        alphadata_row                     :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
        alphaaddress                      :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        alphadl_filter                    :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        alphafilter_address               :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        alphadata_row_1                   :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
        alphaaddress_1                    :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        alphaul_filter                    :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        alphafilter_address_1             :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        alphadata_row_2                   :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
        alphaaddress_2                    :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        alphacombiner                     :   IN    std_logic_vector(8 DOWNTO 0);  -- ufix9
        alphadist_address                 :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        alphadata_row_3                   :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
        alphaaddress_3                    :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        alphasplitter                     :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        alphadist_address_1               :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        ce_out                            :   OUT   std_logic;
        coeff_out                         :   OUT   vector_of_std_logic_vector8(0 TO 9);  -- uint8 [10]
        coeff_out1                        :   OUT   vector_of_std_logic_vector8(0 TO 9);  -- uint8 [10]
        coeff_out2                        :   OUT   vector_of_std_logic_vector8(0 TO 63);  -- uint8 [64]
        coeff_out3                        :   OUT   vector_of_std_logic_vector8(0 TO 15)  -- uint8 [16]
        );
END coeff_bank;


ARCHITECTURE rtl OF coeff_bank IS

  -- Component Declarations
  COMPONENT dl_filter_bank
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          wr_data                         :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
          wr_addr                         :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          wr_en                           :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
          rd_addr                         :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          coeff_out                       :   OUT   vector_of_std_logic_vector8(0 TO 9)  -- uint8 [10]
          );
  END COMPONENT;

  COMPONENT ul_filter_bank
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          wr_data                         :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
          wr_addr                         :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          wr_en                           :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
          rd_addr                         :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          coeff_out                       :   OUT   vector_of_std_logic_vector8(0 TO 9)  -- uint8 [10]
          );
  END COMPONENT;

  COMPONENT combiner_bank
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          wr_data                         :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
          wr_addr                         :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          wr_en                           :   IN    std_logic_vector(8 DOWNTO 0);  -- ufix9
          rd_addr                         :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          coeff_out                       :   OUT   vector_of_std_logic_vector8(0 TO 63)  -- uint8 [64]
          );
  END COMPONENT;

  COMPONENT splitter_bank
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          wr_data                         :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
          wr_addr                         :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          wr_en                           :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
          rd_addr                         :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          coeff_out                       :   OUT   vector_of_std_logic_vector8(0 TO 15)  -- uint8 [16]
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : dl_filter_bank
    USE ENTITY work.dl_filter_bank(rtl);

  FOR ALL : ul_filter_bank
    USE ENTITY work.ul_filter_bank(rtl);

  FOR ALL : combiner_bank
    USE ENTITY work.combiner_bank(rtl);

  FOR ALL : splitter_bank
    USE ENTITY work.splitter_bank(rtl);

  -- Signals
  SIGNAL dl_filter_bank_out1              : vector_of_std_logic_vector8(0 TO 9);  -- ufix8 [10]
  SIGNAL ul_filter_bank_out1              : vector_of_std_logic_vector8(0 TO 9);  -- ufix8 [10]
  SIGNAL combiner_bank_out1               : vector_of_std_logic_vector8(0 TO 63);  -- ufix8 [64]
  SIGNAL splitter_bank_out1               : vector_of_std_logic_vector8(0 TO 15);  -- ufix8 [16]

BEGIN
  Udl_filter_bank_1 : dl_filter_bank
    PORT MAP( clk => clk,
              enb => clk_enable,
              wr_data => alphadata_row,  -- ufix64
              wr_addr => alphaaddress,  -- uint8
              wr_en => alphadl_filter,  -- ufix3
              rd_addr => alphafilter_address,  -- uint8
              coeff_out => dl_filter_bank_out1  -- uint8 [10]
              );

  Uul_filter_bank_1 : ul_filter_bank
    PORT MAP( clk => clk,
              enb => clk_enable,
              wr_data => alphadata_row_1,  -- ufix64
              wr_addr => alphaaddress_1,  -- uint8
              wr_en => alphaul_filter,  -- ufix3
              rd_addr => alphafilter_address_1,  -- uint8
              coeff_out => ul_filter_bank_out1  -- uint8 [10]
              );

  Ucombiner_bank_1 : combiner_bank
    PORT MAP( clk => clk,
              enb => clk_enable,
              wr_data => alphadata_row_2,  -- ufix64
              wr_addr => alphaaddress_2,  -- uint8
              wr_en => alphacombiner,  -- ufix9
              rd_addr => alphadist_address,  -- uint8
              coeff_out => combiner_bank_out1  -- uint8 [64]
              );

  Usplitter_bank_1 : splitter_bank
    PORT MAP( clk => clk,
              enb => clk_enable,
              wr_data => alphadata_row_3,  -- ufix64
              wr_addr => alphaaddress_3,  -- uint8
              wr_en => alphasplitter,  -- ufix3
              rd_addr => alphadist_address_1,  -- uint8
              coeff_out => splitter_bank_out1  -- uint8 [16]
              );

  ce_out <= clk_enable;

  coeff_out <= dl_filter_bank_out1;

  coeff_out1 <= ul_filter_bank_out1;

  coeff_out2 <= combiner_bank_out1;

  coeff_out3 <= splitter_bank_out1;

END rtl;

