%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                          %
%          Generated by MATLAB 9.11 and Fixed-Point Designer 7.3           %
%                                                                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%#codegen
function output = gol_mat_stream_fixpt(x, width, kernel)
    fm = get_fimath();

    [fmo_1, fmo_2] = size(kernel);
    kernel_height = fi(fmo_1, 0, 2, 0, fm);
    kernel_width = fi(fmo_2, 0, 3, 0, fm);

    persistent memory;
    persistent extraMemory;
    if isempty(memory) || isempty(extraMemory)
        memory = fi(zeros(fi_toint(fi_signed(kernel_height)-fi(1, 0, 1, 0, fm)), fi_toint(width)), 0, 8, 0, fm);
        extraMemory = fi(zeros(1, fi_toint(fi_signed(kernel_width)-fi(1, 0, 1, 0, fm))), 0, 8, 0, fm);
    end
    
    flipped_kernel = fi(flip(flip(kernel,2)), 1, 2, 0, fm);
    output = fi(sum([fi(x, 0, 8, 0, fm), extraMemory].*flipped_kernel(1,:)), 1, 11, 0, fm);

    for i=fi(1, 0, 1, 0, fm):fi_signed(kernel_height)-fi(1, 0, 1, 0, fm)
        output(:) = output + sum(memory(i, width-kernel_width+fi(1, 0, 1, 0, fm):width).*flipped_kernel(i+fi(1, 0, 1, 0, fm),:));
    end
    
    memory = fi([
        fi(extraMemory(end), 0, 8, 0, fm), memory(1, 1:end-1);
        fi(memory(1:end-1,end), 0, 8, 0, fm), memory(2:end,1:end-1);
    ], 0, 8, 0, fm);

    extraMemory(:) = [fi(x, 0, 8, 0, fm), extraMemory(1:end-1)];

end



function y = fi_signed(a)
    coder.inline( 'always' );
    if isfi( a ) && ~(issigned( a ))
        nt = numerictype( a );
        new_nt = numerictype( 1, nt.WordLength + 1, nt.FractionLength );
        y = fi( a, new_nt, fimath( a ) );
    else
        y = a;
    end
end


function y = fi_toint(u)
    coder.inline( 'always' );
    if isfi( u )
        nt = numerictype( u );
        s = nt.SignednessBool;
        wl = nt.WordLength;
        y = int32( fi( u, s, wl, 0, hdlfimath ) );
    else
        y = int32( u );
    end
end

function fm = get_fimath()
	fm = fimath('RoundingMethod', 'Floor',...
	     'OverflowAction', 'Wrap',...
	     'ProductMode','FullPrecision',...
	     'MaxProductWordLength', 128,...
	     'SumMode','FullPrecision',...
	     'MaxSumWordLength', 128);
end
